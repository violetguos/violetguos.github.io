<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Y Violet Guo</title>
    <link>https://violetguos.github.io/post/</link>
    <description>Recent content in Posts on Y Violet Guo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019</copyright>
    <lastBuildDate>Sun, 01 Jan 2017 00:00:00 -0500</lastBuildDate>
    
	<atom:link href="https://violetguos.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Speaker Accent Classification with Deep Learning</title>
      <link>https://violetguos.github.io/post/accentdl/</link>
      <pubDate>Sat, 12 Jan 2019 17:04:01 -0500</pubDate>
      
      <guid>https://violetguos.github.io/post/accentdl/</guid>
      <description>The task of classifying the accent of recorded speech has generally been approached with traditional SVM or UBM-GMM methods (Omar and Pelecanos, 2010; Ge, 2015). However, modern deep learning methods yield the potential to dramatically increase performance. In our report, we train several varieties of Recurrent and Convolutional Neural Networks on three types of features (MFCC, formant, and raw spectrogram) extracted from North American and British English speech recordings in order to predict the accent of the speaker.</description>
    </item>
    
    <item>
      <title>Security Project: Exploiting OS using C and Assembly</title>
      <link>https://violetguos.github.io/post/security/</link>
      <pubDate>Sun, 12 Nov 2017 16:10:39 -0500</pubDate>
      
      <guid>https://violetguos.github.io/post/security/</guid>
      <description>Introduction Cybersecurity is a branch of study in computer system and algorithm that aims to provide security to data and programs. The two types of work done are 1. Improve computer system to shield users from attackers 2. Encrypt data so that when the device is compromised, the attacker cannot decrypt user data
The course project is also designed to address these two objective 1. Given a vulnerable system, implement code to attack the system 2.</description>
    </item>
    
    <item>
      <title>Pacman with AI</title>
      <link>https://violetguos.github.io/post/pacmanai/</link>
      <pubDate>Wed, 01 Nov 2017 07:02:56 -0500</pubDate>
      
      <guid>https://violetguos.github.io/post/pacmanai/</guid>
      <description>Introduction The classic algorithm for game playing is to program computers to &amp;ldquo;think&amp;rdquo; like a chess master. However, computers are not good at wholistic reasoning which often involves some philosophical ideas about chess. Instead, artificial intelligence programs a computer to search for the best move out of all moves. Right away, you may think that it is exhaustive search where you look for all the combinations of possible solutions. This is where artificial intelligence comes in and improves that search with heuristics and parallel processing to selectively search for the best move.</description>
    </item>
    
    <item>
      <title>Android app to reduce clinic wait time</title>
      <link>https://violetguos.github.io/post/andriod/</link>
      <pubDate>Sun, 12 Jun 2016 16:57:28 -0500</pubDate>
      
      <guid>https://violetguos.github.io/post/andriod/</guid>
      <description>This is a hackathon project developed outside of school.
Problem Far too many Canadians facing long wait times for health services experience frustration and wonder if our healthcare system is broken. Literature points to a negative impact of wait time on patients&amp;rsquo; perceptions of health care quality, satisfaction and likeability, patients&amp;rsquo; subsequent behavior, and likelihood of recommendations and repeat visits.
How it works Patients with our app, who have booked an appointment can check-in remotely 30 min before their appointment, if they’re close enough to the medical clinic.</description>
    </item>
    
    <item>
      <title>Program MIPS instruction in Verilog</title>
      <link>https://violetguos.github.io/post/cpu/</link>
      <pubDate>Sat, 02 Apr 2016 06:28:35 -0500</pubDate>
      
      <guid>https://violetguos.github.io/post/cpu/</guid>
      <description>Introduction In this project, I have built a multi-cycle processor&amp;rsquo;s instruction set from scratch.
Technical Details  Programmed a multicycle processor in Verilog on a Altera DE-1 FPGA Configured a new Assembly language instruction set with Verilog  Lessons Learned In processor or hardware design, unlike computer software, there is no room for uncertainty. For example, a software engineer may put a button in a not so convenient place for no good reason, but it does not hinder the functionality of the app, just harder to navigate.</description>
    </item>
    
    <item>
      <title>Roulette on FPGA</title>
      <link>https://violetguos.github.io/post/roulette/</link>
      <pubDate>Sat, 02 Apr 2016 01:29:17 -0500</pubDate>
      
      <guid>https://violetguos.github.io/post/roulette/</guid>
      <description>Introduction This project was built in the same course as the multi-cycle CPU! As the reader can see, low level hardware can be fun. The two projects share similar principles, but this project has additional displays, such as a computer screen, a speaker for audio output, and we made the roulette as pretty as we could. They all run on the same hardware chip(field programmable gate array, FPGA).
Technical Details  Built a roulette game with PS/2 keyboard, audio output, motor, lego controller, and Altera FPGA Implemented linear feedback shift register in Assembly and C to randomize motor speed and spin time Interfaced keyboard input to prompt user’s bet and display on VGA output with JTAG UART, JPIO ports  Lessons Learned User interface (the screen display, music, and the roulette) makes a difference Creativity matters: engineers should not only focus on the technical details</description>
    </item>
    
  </channel>
</rss>